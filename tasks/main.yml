# vim: ft=ansible:et:ts=2

- block:
    - name: Create external collectors directory
      file:
        path: "{{ _scollector.external_collectors.dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create external collectors interval directories
      file:
        path: "{{ _scollector.external_collectors.dir }}/{{ item.interval }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items: "{{ _scollector.external_collectors.collectors }}"

    - name: Create external collectors
      template:
        src: "/etc/ansible/templates/external_collectors/{{ item.template }}"
        dest: "{{ _scollector.external_collectors.dir }}/{{ item.interval }}/{{ item.filename }}"
        owner: root
        group: root
        mode: 0750
      with_items: "{{ _scollector.external_collectors.collectors }}"

  when: _scollector.external_collectors is defined

- name: Create scollector configuration file
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "etc/bosun/scollector.conf"

- block:
    - name: Check if init (override) file for scollector exists
      stat:
        path: /etc/init/scollector.override
      register: stat_scollector_override

    - name: Creating init (override) file for scollector
      file:
        path: "/etc/init/scollector.override"
        state: touch
        owner: root
        group: root
        mode: 0640
      when: not stat_scollector_override.stat.exists

    - name: Set oom score for scollector in Upstart
      lineinfile: 
        dest: "{{ stat_scollector_override.stat.path }}" 
        state: present 
        regexp: '^oom score' 
        line: "oom score {{ _scollector.oom_score_adj }}"
  when: _scollector.oom_score_adj is defined and ansible_service_mgr == "upstart"

- block:
    - name: Check if SystemD Unit file for scollector exists
      stat:
        path: /etc/systemd/system/scollector.service
      register: stat_scollector_systemd

    - name: Set oom score for scollector in systemd
      lineinfile:
        dest: "/etc/systemd/system/scollector.service"
        state: present
        regexp: '^OOMScoreAdjust='
        line: "OOMScoreAdjust={{ _scollector.oom_score_adj }}"
        insertafter: '^\[Service\]'
      register: systemd_reload
      when: stat_scollector_systemd.stat.exists

    - name: Reload service definitions
      systemd:
        daemon_reload: yes
      when: systemd_reload.changed
  when: _scollector.oom_score_adj is defined and ansible_service_mgr == "systemd"

- block:
    - name: Announce Meta data of external collector metrics
      run_once: true
      uri:
        method: POST
        url: "{{ _scollector.server.protocol|default('https') }}://{{ _scollector.server.ip }}:{{ _scollector.server.port }}/api/metadata/put"
        url_username: "{{ _scollector.auth.user }}"
        url_password: "{{ _scollector.auth.password }}"
        body_format: json
        body:
          - metric: "{{ item.metric }}"
            name: "rate"
            value: "{{ item.ratetype }}"
          - metric: "{{ item.metric }}"
            name: "unit"
            value: "{{ item.unit }}"
          - metric: "{{ item.metric }}"
            name: "desc"
            value: "{{ item.desc|default('') }}"
        status_code: 204
      with_items: "{{ _scollector.external_collectors.metric_metadata }}"
      ignore_errors: yes

  when: _scollector.external_collectors.metric_metadata is defined
